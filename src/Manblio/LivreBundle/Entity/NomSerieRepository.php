<?php

namespace Manblio\LivreBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * NomSerieRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NomSerieRepository extends EntityRepository
{
	public function findAllLivreAndSerieTrier()
	{
	    $query = $this->getEntityManager()
	        ->createQuery('
	            SELECT l, s 
	            FROM ManblioLivreBundle:nomSerie s
	            JOIN s.livre l
	            ORDER BY s.nomSerie ASC'
	        );

	    try {
	        return $query->getResult();
	    } catch (\Doctrine\ORM\NoResultException $e) {
	        return null;
	    }
	}
	public function findMyBook($id)
	{
	    $query = $this->getEntityManager()
	        ->createQuery('
	            SELECT p, s, l 
	            FROM ManblioLivreBundle:nomSerie s
	            JOIN s.livre l
	            JOIN l.possession p
	            WHERE p.utilisateur = :id
	            AND p.livre = l.id
	            AND l.nomSerie = s.id
	            ORDER BY s.nomSerie ASC
	            '
	        )
	        ->setParameter('id', $id);
	    try {
	        return $query->getResult();
	    } catch (\Doctrine\ORM\NoResultException $e) {
	        return null;
	    }
	}
	public function SearchSerie($keyWord)
    {	
    	$keyWord = str_replace(' ', '%', trim($keyWord));
 
		$qb = $this->createQueryBuilder('u')  //add select and array for JSON
            ->where('u.nomSerie LIKE :string OR u.auteur LIKE :string')
            ->setParameter('string', '%'.$keyWord.'%')
            ->setMaxResults('10');
 
    return $qb->getQuery()
               ->getResult();
 
    }

    /**
         * Get the paginated list of published articles
         *
         * @param int $page
         * @param int $maxperpage
         * @param string $sortby
         * @return Paginator
         */
        public function getList($page=1, $maxperpage=10)
        {
            $q = $this->_em->createQueryBuilder()
                ->select('serie')
                ->from('ManblioLivreBundle:NomSerie','serie')
                ->orderBy("serie.nomSerie",'asc')
            ;
     
            $q->setFirstResult(($page-1) * $maxperpage)
                ->setMaxResults($maxperpage);
     
            return new Paginator($q);
        }

}
