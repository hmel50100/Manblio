<?php

namespace Manblio\LivreBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * LivreRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LivreRepository extends EntityRepository
{
	

	public function getLastTome($serie)
    {
 
		$qb = $this->createQueryBuilder('u')  //add select and array for JSON
            ->where('u.nomSerie = :serie')
            ->orderBy('u.numero', 'DESC')
            ->setParameter('serie', $serie)
            ->setMaxResults('1');
 
    return $qb->getQuery()
               ->getResult();
 
    }

    public function getSerieUser($id){
       $query = $this->getEntityManager()
             ->createQuery('
            SELECT l
            FROM ManblioLivreBundle:Livre l
            JOIN l.possession p
            WHERE p.utilisateur = :id
            AND l.id = p.livre
            GROUP BY l.nomSerie'

        )->setParameter('id', $id);

$products = $query->getResult();
return $products;
    }

 /*$query = $this->getEntityManager()
             ->createQuery('
            SELECT p, l.nomSerie
            FROM ManblioLivreBundle:Possession p
            JOIN p.livre l
            WHERE p.utilisateur = :id
            AND l.id = p.livre
            GROUP BY l.nomSerie'

        )->setParameter('id', $id);

$products = $query->getResult();
*/
    public function findLastAdd($id, $serie) {
        $query = $this->getEntityManager()
            ->createQuery('
            SELECT MAX(l.numero) num
            FROM ManblioLivreBundle:possession p
            JOIN p.livre l
            JOIN l.nomSerie s
            WHERE l.nomSerie = :nomSerie
            AND p.livre = l.id
            AND p.utilisateur=  :id
            AND l.nomSerie = s.id
            '
        )->setParameters(array(
            'id'=> $id,
            'nomSerie' => $serie,
            )
        )->setMaxResults(1);

$products = $query->getSingleScalarResult();
            return $products;
    }

    public function findByNumeroAndSerie($numero, $nomSerie){
        $qb = $this->createQueryBuilder('l')
            ->select('l')  //add select and array for JSON
            ->where('l.numero = :numero AND l.nomSerie=:nomSerie')
            ->setParameters(array('numero' => $numero, 'nomSerie' => $nomSerie ));
 
    return $qb->getQuery()->getResult();
    }
}
